---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-cors-public
  namespace: {{ .Values.namespace }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: nginx-cors-public
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        nginxRolloutID: {{ randAlphaNum 5 | quote }} # Restart nginx after every deployment
        fluentbit.io/parser: nginx2
      labels:
        app: nginx-cors-public
    spec:
      # Running nginx with custom config
{{- if .Values.imagepullsecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagepullsecrets }}
{{- end }}
      volumes:
        - name: tls
          secret:
            secretName: ingress-cert
        - name: proxy-config
          configMap:
            name: proxy-cors-default
        - name: nginx-config
          configMap:
            name: nginx-cors-conf
{{- if .Values.volumes }}
{{ toYaml .Values.volumes | indent 8 }}
{{- end }}
      containers:
      - name: nginx-public
        image: "{{ .Values.dockerhub }}/{{ .Values.repository }}:{{ .Values.image_tag }}"
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
          - name: tls
            mountPath: /etc/secrets
            readOnly: true
          - name: proxy-config
            mountPath: /etc/nginx/defaults.d
          - name: nginx-config
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
{{- if .Values.volumeMounts }}
{{ toYaml .Values.volumeMounts | indent 10 }}
{{- end }}
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-cors-public
  namespace: {{ .Values.namespace }}
{{- if .Values.service.annotations }}
  annotations:
{{ toYaml .Values.service.annotations | indent 4 }}
{{- end }}
spec:
  externalTrafficPolicy: Local
  selector:
    app: nginx-cors-public
  type: {{ .Values.service.type }}
{{- if and .Values.service.nginx_public_ingress_ip (ne .Values.service.type "NodePort") }}
  loadBalancerIP: {{ .Values.service.nginx_public_ingress_ip }}
{{- end }}
  ports:
{{ toYaml .Values.service.ports | indent 4 }}
